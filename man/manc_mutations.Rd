% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bodies.R
\name{manc_mutations}
\alias{manc_mutations}
\title{Get all the modifications associated with one or more DVID nodes}
\usage{
manc_mutations(nodes = "neutu", include_first = NA, bigcols = FALSE, ...)
}
\arguments{
\item{nodes}{One or more DVID nodes. Ranges can be specified as
\code{"first:last"}. The special value \code{"all"} implies the full
sequence from the root node.}

\item{include_first}{Whether to include the first node in a sequence. The
default behaviour (when \code{=NA}) will ignore the first node in a range
specified \code{first:last} but keep the root nodes for the special range
of "all".}

\item{bigcols}{Whether to include big columns in the results. The
CleavedSupervoxels column in particular is very large and probably is not
that useful for many. Default \code{FALSE}.}

\item{...}{Additional arguments passed to pbapply}
}
\value{
A \code{tibble} with columns including: \itemize{

  \item Action: merge, cleave, supervoxel-split

  \item App: Typically NeuTu/Neu3

  \item Target: For NeuTu the bodyid of the (larger) target object

  \item Labels: For NeuTu the bodyids of the (smaller) objects being merged
  into the (larger) target object.

  \item CleavedLabel: For Neu3 the label of the new smaller cleaved body

  \item OrigLabel: For Neu3 the label of the larger cleaved body (which
  should retain its id)

  \item Timestamp: Absolute time in UTC at which change was committed in
  \code{POSIXct} format.

  \item Reltimestamp: Relative timestamp (in seconds) referenced to the time
  at which new DVID node was opened. }
}
\description{
Get all the modifications associated with one or more DVID nodes
}
\examples{
\dontrun{
library(ggplot2)
library(dplyr)
# find all mutations in neutu but not yet in clio
notin_neuprint=manc_mutations('neuprint:neutu')
subset(notin_neuprint, User!='bergs') \%>\%
  qplot(time, data=., bins=100, fill=Action)

library(ggplot2)

allmuts=manc_mutations('all')
qplot(Timestamp, fill=App, data=allmuts, bins=100)

allmuts \%>\%
  filter(User!='bergs') \%>\%
  qplot(Timestamp, data=., bins=100, fill=App)

subset(allmuts, User!='bergs') \%>\%
  qplot(Timestamp, data=., bins=100, fill=Action)
}
}
