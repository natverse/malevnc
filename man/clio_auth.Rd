% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clio-auth.R
\name{clio_auth}
\alias{clio_auth}
\alias{clio_token}
\title{Clio authorisation infrastructure using Google via the gargle package}
\usage{
clio_auth(
  email = getOption("malevnc.clio_email", gargle::gargle_oauth_email()),
  cache = gargle::gargle_oauth_cache(),
  ...
)

clio_token(token.only = FALSE)
}
\arguments{
\item{email}{An optional email - must be the one linked to your Clio account
(and therefore linked to a Google account). See
\code{gargle::link{credentials_user_oauth2}} for details.}

\item{cache}{Whether to use an oauth cache (Expert use only, see
\code{gargle::\link{gargle_oauth_cache}} for details).}

\item{...}{Additional arguments passed to \code{gargle::\link{token_fetch}}}

\item{token.only}{Whether to return just the Bearer token as a character
vector (default FALSE returns a \code{\link{Token2.0}} object).}
}
\description{
\code{clio_auth} authorises malevnc to view and edit data in the
  clio-store for body annotations. This function is a wrapper around
  \code{gargle::\link{token_fetch}}. You should normally not need to use it
  directly, but it can be useful if you run into authorisation problems (see
  examples).

\code{clio_token} returns a token to use for clio store queries.
  Experts may wish to use this to construct their own API requests.
}
\examples{
\dontrun{
# regenerate token for specified email if you are getting 401 web errors
clio_auth("user@gmail.com", cache=FALSE)

# To remember your preferred email (e.g. because you have >1 Google account)
usethis::edit_r_profile()
# then add this line, save and restart
options(malevnc.clio_email="user@gmail.com")
}
}
